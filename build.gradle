plugins {
	id 'java'
	id 'groovy'
	id 'net.saliman.cobertura' version '2.3.1'
	id 'jacoco'
	id 'com.github.kt3k.coveralls' version '2.6.3'
	id "org.sonarqube" version "2.1"
}

group = 'santanacreations'
version = '1.0'
description = """Common library code"""

sourceCompatibility = '1.7'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

if (!hasProperty('mainClass')) {
    ext.mainClass = ''
}

repositories {
    mavenCentral()
}

dependencies {
	testCompile 'junit:junit:4.12'
	testRuntime "org.slf4j:slf4j-api:1.7.10"
}

test {
    filter {
        includeTestsMatching "*Test"
    }
	ignoreFailures = true

	jacoco {
		classDumpFile = file("$buildDir/jacoco/classpathdumps")
	}
}

jacocoTestReport {
	reports {
		html.enabled = true
		xml.enabled = true
		html.destination "${buildDir}/reports/jacoco/jacoco-html"
		xml.destination "${buildDir}/reports/jacoco/jacoco-xml"
	}
}

cobertura {
	coverageFormats = ['html', 'xml']
	coverageReportDir = file("$buildDir/reports/cobertura")
	coverageIgnoreTrivial = true
	coverageIgnores = ['org.slf4j.Logger.*']
}

sonarqube {
    properties {
		property "sonar.projectKey", "SantanaCreations"
        property "sonar.projectName", "Santana Creations"
		property "sonar.projectDescription", "Common library code"
		property "sonar.sourceEncoding", "UTF-8"
		property "sonar.host.url", "https://sonarqube.com"
		property "sonar.java.libraries", dependencyCacheDir.getPath()
		property "sonar.java.test.libraries", dependencyCacheDir.getPath()
    }
}

check.dependsOn jacocoTestReport
check.dependsOn coberturaCheck

//test.finalizedBy(project.tasks.coberturaCheck)
//test.finalizedBy(project.tasks.jacocoTestReport)
//test.finalizedBy(project.tasks.sonarqube)

